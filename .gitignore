using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MyArr
{
    public class DynArr
    {
        private static int capacity = 5;
        private int length = 0;
        public int[] mas = new int[capacity];

        public int Cap
        {
            get
            {
                return mas.Length;
            }
            set
            {
                if (value > 0)
                    capacity = value;
            }
        }

        public int Len()
        {
            return length;
        }

        public void AddTo(int a)
        {
            if (length >= Cap)
            {
                int[] temp = new int[Cap * 2];
                for (int i = 0; i < mas.Length; i++)
                    temp[i] = mas[i];
                this.mas = new int[Cap * 2];
                for (int i = 0; i < temp.Length; i++)
                    mas[i] = temp[i];
                temp = new int[0];
            }

            mas[length] = a;
            length++;
        }

        public void AddToI(int pos, int val)
        {
            if (length >= Cap)
            {
                int[] temp = new int[Cap * 2];
                for (int i = 0; i < mas.Length; i++)
                    temp[i] = mas[i];
                this.mas = new int[Cap * 2];
                for (int i = 0; i < temp.Length; i++)
                    mas[i] = temp[i];
                temp = new int[0];
            }
            length++;
            for (int i = length; i > pos; i--)
                mas[i] = mas[i - 1];
            mas[pos] = val;
        }

        public void DeleteFromI(int pos)
        {
            for (int i = pos; i < length; i++)
                mas[i] = mas[i + 1];
            length--;
        }

        public void SetI(int a, int b)
        {
            mas[a] = b;
        }

        public int GetI(int a)
        {
            return mas[a];
        }
    }

}
